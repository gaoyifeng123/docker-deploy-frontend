name: Deploy frontend application
on:
  push:
    branches: [main, 4.9new]  # 添加新分支触发
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # Docker 环境设置
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      # 动态生成 docker-compose 文件
      - name: Prepare deployment files
        run: |
          if [ "$GITHUB_REF_NAME" = "4.9new" ]; then
            echo "Preparing for port 9999 deployment"
            cat <<EOT > docker-compose-prod.yml
            version: '3.3'
            services:
              frontend-new:
                image: gaoyifeng123/234-deploylab-frontend:4.9new
                pull_policy: always
                ports:
                  - "9999:80"
            EOT
          else
            echo "Preparing for default port 8086 deployment"
            cat <<EOT > docker-compose.yml
            version: '3.3'
            services:
              frontend:
                image: gaoyifeng123/234-deploylab-frontend:latest
                pull_policy: always
                ports:
                  - "8086:80"
            EOT
          fi
          
      # 构建并推送镜像（带分支标签）
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            gaoyifeng123/234-deploylab-frontend:latest
            gaoyifeng123/234-deploylab-frontend:${{ github.ref_name }}
      
      # 复制文件到服务器
      - name: Copy files via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{secrets.HOST_SERVER}}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose*.yml"  # 复制所有 compose 文件
          target: "/home/ubuntu/frontend"
      
      # SSH 部署逻辑
      - name: Run docker compose
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{secrets.HOST_SERVER}}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/frontend
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            
            # 分支判断部署
            if [ "$GITHUB_REF_NAME" = "new-port" ]; then
              echo "Deploying to port 9999"
              docker compose -f docker-compose-prod.yml -p frontend-new down
              docker compose -f docker-compose-prod.yml -p frontend-new pull
              docker compose -f docker-compose-prod.yml -p frontend-new up -d
            else
              echo "Deploying to port 8086"
              docker compose down
              docker compose pull
              docker compose up -d
            fi
            
            # 清理
            rm -rf /home/ubuntu/frontend
            docker system prune -f